{
  "name": "N8N Workflow Generator Expert System Rules",
  "version": "1.0.0",
  "description": "Winsurf rules for generating functional N8N workflows",
  "rules": {
    "n8n-workflow-validation": {
      "severity": "error",
      "description": "Ensure N8N workflow JSON is valid and complete",
      "checks": [
        "workflow-structure",
        "node-connections",
        "credential-references",
        "json-syntax"
      ]
    },
    "n8n-node-structure": {
      "severity": "error",
      "description": "Validate N8N node structure and properties",
      "required_fields": [
        "id",
        "name", 
        "type",
        "typeVersion",
        "position",
        "parameters"
      ]
    },
    "n8n-connection-integrity": {
      "severity": "error",
      "description": "Ensure all node connections are properly defined",
      "checks": [
        "valid-source-nodes",
        "valid-target-nodes",
        "connection-mapping",
        "execution-order"
      ]
    },
    "n8n-openai-compatibility": {
      "severity": "error",
      "description": "Use correct OpenAI node configuration",
      "rules": [
        "use-complete-not-completion",
        "proper-model-references",
        "valid-parameters"
      ]
    },
    "n8n-documentation": {
      "severity": "warn",
      "description": "Include sticky notes for workflow documentation",
      "requirements": [
        "workflow-purpose",
        "step-explanations",
        "configuration-notes",
        "error-handling-docs"
      ]
    },
    "n8n-error-handling": {
      "severity": "error",
      "description": "Include proper error handling in workflows",
      "requirements": [
        "error-workflow-nodes",
        "try-catch-patterns",
        "fallback-mechanisms",
        "error-notifications"
      ]
    },
    "n8n-security": {
      "severity": "error",
      "description": "Ensure secure credential handling",
      "rules": [
        "no-hardcoded-credentials",
        "proper-credential-references",
        "secure-parameter-handling",
        "sensitive-data-protection"
      ]
    },
    "n8n-performance": {
      "severity": "warn",
      "description": "Optimize workflow performance",
      "guidelines": [
        "efficient-node-usage",
        "proper-batching",
        "rate-limit-handling",
        "resource-optimization"
      ]
    },
    "n8n-best-practices": {
      "severity": "warn",
      "description": "Follow N8N workflow best practices",
      "practices": [
        "descriptive-node-names",
        "logical-workflow-structure",
        "proper-data-transformation",
        "consistent-naming-conventions"
      ]
    }
  },
  "workflow_templates": {
    "basic_structure": {
      "name": "Generated Workflow",
      "nodes": [],
      "connections": {},
      "active": false,
      "settings": {
        "executionOrder": "v1"
      },
      "tags": ["generated", "winsurf"]
    },
    "required_node_fields": {
      "id": "string (UUID)",
      "name": "string",
      "type": "string (n8n node type)",
      "typeVersion": "number",
      "position": "[x, y] coordinates",
      "parameters": "object"
    }
  },
  "validation_checks": {
    "pre_generation": [
      "validate_input_requirements",
      "check_node_compatibility",
      "verify_credential_needs"
    ],
    "post_generation": [
      "json_syntax_validation",
      "node_connection_validation",
      "workflow_completeness_check",
      "import_compatibility_test"
    ]
  },
  "error_patterns": {
    "common_issues": [
      "missing_node_connections",
      "invalid_credential_references",
      "incorrect_node_parameters",
      "malformed_json_structure"
    ],
    "fixes": {
      "missing_connections": "Ensure all nodes have proper input/output connections",
      "credential_errors": "Use proper credential reference format",
      "parameter_errors": "Validate all node parameters against N8N schema",
      "json_errors": "Validate JSON syntax and structure"
    }
  },
  "node_specific_rules": {
    "openai": {
      "use_complete": true,
      "required_parameters": ["model", "prompt"],
      "credential_type": "openAiApi"
    },
    "webhook": {
      "required_parameters": ["httpMethod", "path"],
      "security_considerations": ["authentication", "rate_limiting"]
    },
    "http_request": {
      "required_parameters": ["url", "requestMethod"],
      "error_handling": ["retry_logic", "timeout_handling"]
    },
    "code": {
      "language_support": ["javascript", "python"],
      "security_rules": ["no_eval", "input_sanitization"]
    }
  },
  "quality_gates": {
    "minimum_requirements": [
      "valid_json_structure",
      "complete_node_definitions",
      "proper_connections",
      "error_handling_present"
    ],
    "recommended_features": [
      "sticky_note_documentation",
      "descriptive_node_names",
      "workflow_tags",
      "execution_settings"
    ]
  },
  "testing_framework": {
    "validation_steps": [
      "json_schema_validation",
      "n8n_import_test",
      "workflow_execution_test",
      "error_scenario_testing"
    ],
    "success_criteria": [
      "imports_without_errors",
      "executes_successfully",
      "handles_errors_gracefully",
      "produces_expected_output"
    ]
  },
  "documentation_standards": {
    "sticky_notes": {
      "workflow_description": "Explain overall workflow purpose",
      "node_explanations": "Detail what each node does",
      "configuration_notes": "Document important settings",
      "troubleshooting": "Include common issues and fixes"
    },
    "naming_conventions": {
      "nodes": "Use descriptive, action-based names",
      "workflows": "Include purpose and version",
      "variables": "Use clear, meaningful names"
    }
  },
  "compliance_requirements": {
    "n8n_compatibility": {
      "minimum_version": "1.0.0",
      "node_versions": "Use latest stable versions",
      "api_compatibility": "Ensure API endpoint compatibility"
    },
    "security_standards": [
      "no_hardcoded_secrets",
      "proper_authentication",
      "data_encryption",
      "access_control"
    ]
  }
}
